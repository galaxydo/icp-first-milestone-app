type Timestamp = int;
type FileInfo = 
 record {
   collection: text;
   content: blob;
   createdAt: Timestamp;
   extension: FileExtension;
   name: text;
   size: nat;
 };
type FileId__1 = text;
type FileId = text;
type FileExtension = 
 variant {
   aac;
   avi;
   gif;
   jpeg;
   jpg;
   mp3;
   mp4;
   png;
   svg;
   wav;
 };
type FileData = 
 record {
   collection: text;
   content: blob;
   createdAt: Timestamp;
   extension: FileExtension;
   fileId: FileId__1;
   name: text;
   owner: text;
   size: nat;
   uploadedAt: Timestamp;
 };
type Bucket = 
 service {
   getFileInfo: (text, text) -> (opt FileData) query;
   getMyFileIds: (text) -> (vec FileId) query;
   getSize: () -> (nat);
   putFile: (FileInfo, text) -> (opt FileId);
   wallet_balance: () -> (nat);
   whoami: () -> (principal) query;
 };
service : () -> Bucket
