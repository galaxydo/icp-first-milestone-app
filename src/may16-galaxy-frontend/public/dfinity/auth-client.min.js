/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@dfinity/auth-client@1.3.0/lib/cjs/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,i,n){void 0===n&&(n=i);var o=Object.getOwnPropertyDescriptor(t,i);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,n,o)}:function(e,t,i,n){void 0===n&&(n=i),e[n]=t[i]}),__exportStar=this&&this.__exportStar||function(e,t){for(var i in e)"default"===i||Object.prototype.hasOwnProperty.call(t,i)||__createBinding(t,e,i)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AuthClient=exports.ERROR_USER_INTERRUPT=exports.IdbKeyVal=exports.KEY_STORAGE_KEY=exports.KEY_STORAGE_DELEGATION=exports.LocalStorage=exports.IdbStorage=void 0;const agent_1=require("@dfinity/agent"),identity_1=require("@dfinity/identity"),idleManager_1=require("./idleManager"),storage_1=require("./storage");var storage_2=require("./storage");Object.defineProperty(exports,"IdbStorage",{enumerable:!0,get:function(){return storage_2.IdbStorage}}),Object.defineProperty(exports,"LocalStorage",{enumerable:!0,get:function(){return storage_2.LocalStorage}}),Object.defineProperty(exports,"KEY_STORAGE_DELEGATION",{enumerable:!0,get:function(){return storage_2.KEY_STORAGE_DELEGATION}}),Object.defineProperty(exports,"KEY_STORAGE_KEY",{enumerable:!0,get:function(){return storage_2.KEY_STORAGE_KEY}});var db_1=require("./db");Object.defineProperty(exports,"IdbKeyVal",{enumerable:!0,get:function(){return db_1.IdbKeyVal}});const IDENTITY_PROVIDER_DEFAULT="https://identity.ic0.app",IDENTITY_PROVIDER_ENDPOINT="#authorize",ECDSA_KEY_LABEL="ECDSA",ED25519_KEY_LABEL="Ed25519",INTERRUPT_CHECK_INTERVAL=500;exports.ERROR_USER_INTERRUPT="UserInterrupt",__exportStar(require("./idleManager"),exports);class AuthClient{constructor(e,t,i,n,o,r,a,s){this._identity=e,this._key=t,this._chain=i,this._storage=n,this.idleManager=o,this._createOptions=r,this._idpWindow=a,this._eventHandler=s,this._registerDefaultIdleCallback()}static async create(e={}){var t,i,n;const o=null!==(t=e.storage)&&void 0!==t?t:new storage_1.IdbStorage,r=null!==(i=e.keyType)&&void 0!==i?i:"ECDSA";let a=null;if(e.identity)a=e.identity;else{let e=await o.get(storage_1.KEY_STORAGE_KEY);if(!e&&storage_1.isBrowser)try{const t=new storage_1.LocalStorage,i=await t.get(storage_1.KEY_STORAGE_DELEGATION),n=await t.get(storage_1.KEY_STORAGE_KEY);i&&n&&"ECDSA"===r&&(console.log("Discovered an identity stored in localstorage. Migrating to IndexedDB"),await o.set(storage_1.KEY_STORAGE_DELEGATION,i),await o.set(storage_1.KEY_STORAGE_KEY,n),e=i,await t.remove(storage_1.KEY_STORAGE_DELEGATION),await t.remove(storage_1.KEY_STORAGE_KEY))}catch(e){console.error("error while attempting to recover localstorage: "+e)}if(e)try{"object"==typeof e?a="Ed25519"===r&&"string"==typeof e?await identity_1.Ed25519KeyIdentity.fromJSON(e):await identity_1.ECDSAKeyIdentity.fromKeyPair(e):"string"==typeof e&&(a=identity_1.Ed25519KeyIdentity.fromJSON(e))}catch(e){}}let s,l=new agent_1.AnonymousIdentity,d=null;if(a)try{const t=await o.get(storage_1.KEY_STORAGE_DELEGATION);if("object"==typeof t&&null!==t)throw new Error("Delegation chain is incorrectly stored. A delegation chain should be stored as a string.");e.identity?l=e.identity:t&&(d=identity_1.DelegationChain.fromJSON(t),(0,identity_1.isDelegationValid)(d)?l="toDer"in a?identity_1.PartialDelegationIdentity.fromDelegation(a,d):identity_1.DelegationIdentity.fromDelegation(a,d):(await _deleteStorage(o),a=null))}catch(e){console.error(e),await _deleteStorage(o),a=null}return(null===(n=e.idleOptions)||void 0===n?void 0:n.disableIdle)?s=void 0:(d||e.identity)&&(s=idleManager_1.IdleManager.create(e.idleOptions)),a||("Ed25519"===r?(a=await identity_1.Ed25519KeyIdentity.generate(),await o.set(storage_1.KEY_STORAGE_KEY,JSON.stringify(a.toJSON()))):(e.storage&&"ECDSA"===r&&console.warn("You are using a custom storage provider that may not support CryptoKey storage. If you are using a custom storage provider that does not support CryptoKey storage, you should use 'Ed25519' as the key type, as it can serialize to a string"),a=await identity_1.ECDSAKeyIdentity.generate(),await o.set(storage_1.KEY_STORAGE_KEY,a.getKeyPair()))),new this(l,a,d,o,s,e)}_registerDefaultIdleCallback(){var e,t;const i=null===(e=this._createOptions)||void 0===e?void 0:e.idleOptions;(null==i?void 0:i.onIdle)||(null==i?void 0:i.disableDefaultIdleCallback)||null===(t=this.idleManager)||void 0===t||t.registerCallback((()=>{this.logout(),location.reload()}))}async _handleSuccess(e,t){var i,n;const o=e.delegations.map((e=>({delegation:new identity_1.Delegation(e.delegation.pubkey,e.delegation.expiration,e.delegation.targets),signature:e.signature.buffer}))),r=identity_1.DelegationChain.fromDelegations(o,e.userPublicKey.buffer),a=this._key;if(!a)return;this._chain=r,this._identity="toDer"in a?identity_1.PartialDelegationIdentity.fromDelegation(a,this._chain):identity_1.DelegationIdentity.fromDelegation(a,this._chain),null===(i=this._idpWindow)||void 0===i||i.close();const s=null===(n=this._createOptions)||void 0===n?void 0:n.idleOptions;this.idleManager||(null==s?void 0:s.disableIdle)||(this.idleManager=idleManager_1.IdleManager.create(s),this._registerDefaultIdleCallback()),this._removeEventListener(),delete this._idpWindow,this._chain&&await this._storage.set(storage_1.KEY_STORAGE_DELEGATION,JSON.stringify(this._chain.toJSON())),null==t||t(e)}getIdentity(){return this._identity}async isAuthenticated(){return!this.getIdentity().getPrincipal().isAnonymous()&&null!==this._chain}async login(e){var t,i,n,o;const r=BigInt(8)*BigInt(36e11),a=new URL((null===(t=null==e?void 0:e.identityProvider)||void 0===t?void 0:t.toString())||IDENTITY_PROVIDER_DEFAULT);a.hash="#authorize",null===(i=this._idpWindow)||void 0===i||i.close(),this._removeEventListener(),this._eventHandler=this._getEventHandler(a,Object.assign({maxTimeToLive:null!==(n=null==e?void 0:e.maxTimeToLive)&&void 0!==n?n:r},e)),window.addEventListener("message",this._eventHandler),this._idpWindow=null!==(o=window.open(a.toString(),"idpWindow",null==e?void 0:e.windowOpenerFeatures))&&void 0!==o?o:void 0;const s=()=>{this._idpWindow&&(this._idpWindow.closed?this._handleFailure(exports.ERROR_USER_INTERRUPT,null==e?void 0:e.onError):setTimeout(s,500))};s()}_getEventHandler(e,t){return async i=>{var n,o,r;if(i.origin!==e.origin)return void console.warn(`WARNING: expected origin '${e.origin}', got '${i.origin}' (ignoring)`);const a=i.data;switch(a.kind){case"authorize-ready":{const i=Object.assign({kind:"authorize-client",sessionPublicKey:new Uint8Array(null===(n=this._key)||void 0===n?void 0:n.getPublicKey().toDer()),maxTimeToLive:null==t?void 0:t.maxTimeToLive,allowPinAuthentication:null==t?void 0:t.allowPinAuthentication,derivationOrigin:null===(o=null==t?void 0:t.derivationOrigin)||void 0===o?void 0:o.toString()},null==t?void 0:t.customValues);null===(r=this._idpWindow)||void 0===r||r.postMessage(i,e.origin);break}case"authorize-client-success":try{await this._handleSuccess(a,null==t?void 0:t.onSuccess)}catch(e){this._handleFailure(e.message,null==t?void 0:t.onError)}break;case"authorize-client-failure":this._handleFailure(a.text,null==t?void 0:t.onError)}}}_handleFailure(e,t){var i;null===(i=this._idpWindow)||void 0===i||i.close(),null==t||t(e),this._removeEventListener(),delete this._idpWindow}_removeEventListener(){this._eventHandler&&window.removeEventListener("message",this._eventHandler),this._eventHandler=void 0}async logout(e={}){if(await _deleteStorage(this._storage),this._identity=new agent_1.AnonymousIdentity,this._chain=null,e.returnTo)try{window.history.pushState({},"",e.returnTo)}catch(t){window.location.href=e.returnTo}}}async function _deleteStorage(e){await e.remove(storage_1.KEY_STORAGE_KEY),await e.remove(storage_1.KEY_STORAGE_DELEGATION),await e.remove(storage_1.KEY_VECTOR)}exports.AuthClient=AuthClient;
//# sourceMappingURL=/sm/79974c765ff0f029565c1e065ea6bd03e329d3ecf6a49018b6f1be168ae9a975.map